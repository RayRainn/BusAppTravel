// Generated by view binder compiler. Do not edit!
package com.example.busapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.busapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFirstBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btreg;

  @NonNull
  public final Button btsign;

  @NonNull
  public final ProgressBar loading;

  @NonNull
  public final TextView textviewFirst;

  @NonNull
  public final TextView textviewSecond;

  private FragmentFirstBinding(@NonNull ConstraintLayout rootView, @NonNull Button btreg,
      @NonNull Button btsign, @NonNull ProgressBar loading, @NonNull TextView textviewFirst,
      @NonNull TextView textviewSecond) {
    this.rootView = rootView;
    this.btreg = btreg;
    this.btsign = btsign;
    this.loading = loading;
    this.textviewFirst = textviewFirst;
    this.textviewSecond = textviewSecond;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFirstBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFirstBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_first, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFirstBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btreg;
      Button btreg = ViewBindings.findChildViewById(rootView, id);
      if (btreg == null) {
        break missingId;
      }

      id = R.id.btsign;
      Button btsign = ViewBindings.findChildViewById(rootView, id);
      if (btsign == null) {
        break missingId;
      }

      id = R.id.loading;
      ProgressBar loading = ViewBindings.findChildViewById(rootView, id);
      if (loading == null) {
        break missingId;
      }

      id = R.id.textview_first;
      TextView textviewFirst = ViewBindings.findChildViewById(rootView, id);
      if (textviewFirst == null) {
        break missingId;
      }

      id = R.id.textview_second;
      TextView textviewSecond = ViewBindings.findChildViewById(rootView, id);
      if (textviewSecond == null) {
        break missingId;
      }

      return new FragmentFirstBinding((ConstraintLayout) rootView, btreg, btsign, loading,
          textviewFirst, textviewSecond);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
