// Generated by view binder compiler. Do not edit!
package com.example.busapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.busapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityConfirmationBookingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonBackMain;

  @NonNull
  public final Button buttonToPay;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final RecyclerView recyclerViewConfirm;

  @NonNull
  public final TextView textViewPrice;

  private ActivityConfirmationBookingBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonBackMain, @NonNull Button buttonToPay,
      @NonNull ConstraintLayout constraintLayout, @NonNull RecyclerView recyclerViewConfirm,
      @NonNull TextView textViewPrice) {
    this.rootView = rootView;
    this.buttonBackMain = buttonBackMain;
    this.buttonToPay = buttonToPay;
    this.constraintLayout = constraintLayout;
    this.recyclerViewConfirm = recyclerViewConfirm;
    this.textViewPrice = textViewPrice;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityConfirmationBookingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityConfirmationBookingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_confirmation_booking, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityConfirmationBookingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_back_main;
      Button buttonBackMain = ViewBindings.findChildViewById(rootView, id);
      if (buttonBackMain == null) {
        break missingId;
      }

      id = R.id.button_to_pay;
      Button buttonToPay = ViewBindings.findChildViewById(rootView, id);
      if (buttonToPay == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.recycler_view_confirm;
      RecyclerView recyclerViewConfirm = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewConfirm == null) {
        break missingId;
      }

      id = R.id.textView_price;
      TextView textViewPrice = ViewBindings.findChildViewById(rootView, id);
      if (textViewPrice == null) {
        break missingId;
      }

      return new ActivityConfirmationBookingBinding((ConstraintLayout) rootView, buttonBackMain,
          buttonToPay, constraintLayout, recyclerViewConfirm, textViewPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
