// Generated by view binder compiler. Do not edit!
package com.example.busapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.busapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWelcomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout CL;

  @NonNull
  public final FrameLayout firstFragment;

  @NonNull
  public final FragmentContainerView fragment;

  @NonNull
  public final Toolbar toolbar;

  private ActivityWelcomeBinding(@NonNull ConstraintLayout rootView, @NonNull ConstraintLayout CL,
      @NonNull FrameLayout firstFragment, @NonNull FragmentContainerView fragment,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.CL = CL;
    this.firstFragment = firstFragment;
    this.fragment = fragment;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWelcomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWelcomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_welcome, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWelcomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CL;
      ConstraintLayout CL = ViewBindings.findChildViewById(rootView, id);
      if (CL == null) {
        break missingId;
      }

      id = R.id.firstFragment;
      FrameLayout firstFragment = ViewBindings.findChildViewById(rootView, id);
      if (firstFragment == null) {
        break missingId;
      }

      id = R.id.fragment;
      FragmentContainerView fragment = ViewBindings.findChildViewById(rootView, id);
      if (fragment == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityWelcomeBinding((ConstraintLayout) rootView, CL, firstFragment, fragment,
          toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
